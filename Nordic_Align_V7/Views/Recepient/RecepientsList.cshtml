@model IEnumerable<Nordic_Align_V7.Models.RecepientModel>
@{
    var user = await UserManager.GetUserAsync(User);
    var roles = user != null ? await UserManager.GetRolesAsync(user) : new List<string>();
    var role = roles.FirstOrDefault();
}

@{
    ViewData["Title"] = "Mottagare";
}

<section class="mottagare-table">
    <div class="color"></div>
    <div class="color"></div>
    <div class="color"></div>

    <div class="box">
        <div class="square" style="--i:0;"></div>
        <div class="square" style="--i:1;"></div>
        <div class="square" style="--i:2;"></div>
        <div class="square" style="--i:3;"></div>
        <div class="square" style="--i:4;"></div>

        <div class="container">
            <div class="form">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div id="error-message" class="alert">
                        @TempData["ErrorMessage"]
                    </div>

                    <script>
                        setTimeout(function() {
                            var errorMessage = document.getElementById("error-message");
                            if (errorMessage) {
                                errorMessage.style.display = "none";
                            }
                        }, 4000); 
                    </script>
                }


                <h1>Mottagare tabell</h1>

                <table class="table">
                    <tr>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>

                        <th scope="col">
                            @Html.DisplayNameFor(model => model.PostalCode)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.DeliveryAddress)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.Phone)
                        </th scope="col">
                        <th></th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <th scope="col">
                                <a style="color:black" href="/Order/OrdersByRecipientId?recipientId=@item.Id">@Html.DisplayFor(modelItem => item.FullName)</a>
                            </th>




                            <th scope="col">
                                @Html.DisplayFor(modelItem => item.PostalCode)
                            </th>
                            <th scope="col">
                                @Html.DisplayFor(modelItem => item.DeliveryAddress)
                            </th >
                            <th scope="col">
                                @Html.DisplayFor(modelItem => item.Phone)
                            </th>

                            @if (role == "Admin")
                            {
                                <th scope="col">
                                    <a class="icon" aria-label="Edit" href="/Recepient/Edit?id=@item.Id">&#9998;</a>
                                </th>
                                <th scope="col">
                                    <a class="icon" aria-label="Delete" href="/Recepient/Delete?id=@item.Id">&#128465;</a>
                                </th>
                            }
                        </tr>

                    }
                </table>
                <a asp-controller="Recepient" target="_self" asp-action="Create" class="button-secondary">Lägg till mottagare</a>

            </div>
            
        </div>

        

    </div>
    

</section>

<script defer src="~/js/main.js"></script>
